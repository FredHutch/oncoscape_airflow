{"_id":"datatype-expansion","_rev":"13-712da95d84b7cd232ca1ff4105607ac3","name":"datatype-expansion","description":"> Often, tools need the full expansion of RAML data types where there are no references. This module gives you a utility tool to expand a given type and create a canonical form.","dist-tags":{"latest":"0.1.1"},"versions":{"0.0.1":{"name":"datatype-expansion","version":"0.0.1","main":"index","keywords":["raml","expansion","types"],"homepage":"https://github.com/raml-org/raml-parser-toolbelt/tree/master/tools/datatype-expansion","license":"Apache-2.0","bugs":{"url":"https://github.com/raml-org/raml-parser-toolbelt/issues"},"description":"> Often, tools need the full expansion of RAML data types where there are no references. This module gives you a utility tool to expand a given type and create a canonical form.","_id":"datatype-expansion@0.0.1","scripts":{},"_shasum":"c9614445f9d6b89500cf5c5b054bcd28e2968293","_from":".","_npmVersion":"3.5.0","_nodeVersion":"5.1.0","_npmUser":{"name":"christianvogel","email":"christianvogel84@gmail.com"},"dist":{"shasum":"c9614445f9d6b89500cf5c5b054bcd28e2968293","tarball":"https://registry.npmjs.org/datatype-expansion/-/datatype-expansion-0.0.1.tgz"},"maintainers":[{"name":"christianvogel","email":"christianvogel84@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/datatype-expansion-0.0.1.tgz_1471432114078_0.4077209869865328"},"directories":{}},"0.0.2":{"name":"datatype-expansion","version":"0.0.2","main":"index","keywords":["raml","expansion","types"],"homepage":"https://github.com/raml-org/raml-parser-toolbelt/tree/master/tools/datatype-expansion","license":"Apache-2.0","bugs":{"url":"https://github.com/raml-org/raml-parser-toolbelt/issues"},"description":"> Often, tools need the full expansion of RAML data types where there are no references. This module gives you a utility tool to expand a given type and create a canonical form.","_id":"datatype-expansion@0.0.2","scripts":{},"_shasum":"89f31401e60f173e243635de5f9a76952f42d7c1","_from":".","_npmVersion":"3.5.0","_nodeVersion":"5.1.0","_npmUser":{"name":"christianvogel","email":"christianvogel84@gmail.com"},"dist":{"shasum":"89f31401e60f173e243635de5f9a76952f42d7c1","tarball":"https://registry.npmjs.org/datatype-expansion/-/datatype-expansion-0.0.2.tgz"},"maintainers":[{"name":"christianvogel","email":"christianvogel84@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/datatype-expansion-0.0.2.tgz_1471432325345_0.6381181736942381"},"directories":{}},"0.0.3":{"name":"datatype-expansion","version":"0.0.3","main":"index","keywords":["raml","expansion","types"],"homepage":"https://github.com/raml-org/raml-parser-toolbelt/tree/master/tools/datatype-expansion","license":"Apache-2.0","bugs":{"url":"https://github.com/raml-org/raml-parser-toolbelt/issues"},"description":"> Often, tools need the full expansion of RAML data types where there are no references. This module gives you a utility tool to expand a given type and create a canonical form.","_id":"datatype-expansion@0.0.3","scripts":{},"_shasum":"e8fe78d8fe3ff323dc2d163e7f262ae2af4877e8","_from":".","_npmVersion":"3.5.0","_nodeVersion":"5.1.0","_npmUser":{"name":"christianvogel","email":"christianvogel84@gmail.com"},"dist":{"shasum":"e8fe78d8fe3ff323dc2d163e7f262ae2af4877e8","tarball":"https://registry.npmjs.org/datatype-expansion/-/datatype-expansion-0.0.3.tgz"},"maintainers":[{"name":"christianvogel","email":"christianvogel84@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/datatype-expansion-0.0.3.tgz_1471435762093_0.24222065974026918"},"directories":{}},"0.0.4":{"name":"datatype-expansion","version":"0.0.4","main":"index","keywords":["raml","expansion","types"],"homepage":"https://github.com/raml-org/raml-parser-toolbelt/tree/master/tools/datatype-expansion","license":"Apache-2.0","bugs":{"url":"https://github.com/raml-org/raml-parser-toolbelt/issues"},"description":"> Often, tools need the full expansion of RAML data types where there are no references. This module gives you a utility tool to expand a given type and create a canonical form.","_id":"datatype-expansion@0.0.4","scripts":{},"_shasum":"f50c3402f066363f1f8cae36ebb8e612ebc52dbd","_from":".","_npmVersion":"3.5.0","_nodeVersion":"5.1.0","_npmUser":{"name":"christianvogel","email":"christianvogel84@gmail.com"},"dist":{"shasum":"f50c3402f066363f1f8cae36ebb8e612ebc52dbd","tarball":"https://registry.npmjs.org/datatype-expansion/-/datatype-expansion-0.0.4.tgz"},"maintainers":[{"name":"christianvogel","email":"christianvogel84@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/datatype-expansion-0.0.4.tgz_1471435847076_0.7025922604370862"},"directories":{}},"0.0.5":{"name":"datatype-expansion","version":"0.0.5","main":"index","keywords":["raml","expansion","types"],"homepage":"https://github.com/raml-org/raml-parser-toolbelt/tree/master/tools/datatype-expansion","license":"Apache-2.0","bugs":{"url":"https://github.com/raml-org/raml-parser-toolbelt/issues"},"description":"> Often, tools need the full expansion of RAML data types where there are no references. This module gives you a utility tool to expand a given type and create a canonical form.","_id":"datatype-expansion@0.0.5","scripts":{},"_shasum":"ba79d1074cf649017c7e0bfd81f7b070601ce485","_from":".","_npmVersion":"3.5.0","_nodeVersion":"5.1.0","_npmUser":{"name":"christianvogel","email":"christianvogel84@gmail.com"},"dist":{"shasum":"ba79d1074cf649017c7e0bfd81f7b070601ce485","tarball":"https://registry.npmjs.org/datatype-expansion/-/datatype-expansion-0.0.5.tgz"},"maintainers":[{"name":"christianvogel","email":"christianvogel84@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/datatype-expansion-0.0.5.tgz_1471443212118_0.6598245101049542"},"directories":{}},"0.0.6":{"name":"datatype-expansion","version":"0.0.6","main":"index","keywords":["raml","expansion","types"],"homepage":"https://github.com/raml-org/raml-parser-toolbelt/tree/master/tools/datatype-expansion","license":"Apache-2.0","bugs":{"url":"https://github.com/raml-org/raml-parser-toolbelt/issues"},"description":"> Often, tools need the full expansion of RAML data types where there are no references. This module gives you a utility tool to expand a given type and create a canonical form.","_id":"datatype-expansion@0.0.6","scripts":{},"_shasum":"9550d04080befcd3d54962f103f8c03475a17d4c","_from":".","_npmVersion":"3.5.0","_nodeVersion":"5.1.0","_npmUser":{"name":"christianvogel","email":"christianvogel84@gmail.com"},"dist":{"shasum":"9550d04080befcd3d54962f103f8c03475a17d4c","tarball":"https://registry.npmjs.org/datatype-expansion/-/datatype-expansion-0.0.6.tgz"},"maintainers":[{"name":"christianvogel","email":"christianvogel84@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/datatype-expansion-0.0.6.tgz_1471443617772_0.16172070475295186"},"directories":{}},"0.0.10":{"name":"datatype-expansion","version":"0.0.10","main":"index","keywords":["raml","expansion","types"],"homepage":"https://github.com/raml-org/raml-parser-toolbelt/tree/master/tools/datatype-expansion","license":"Apache-2.0","bugs":{"url":"https://github.com/raml-org/raml-parser-toolbelt/issues"},"description":"> Often, tools need the full expansion of RAML data types where there are no references. This module gives you a utility tool to expand a given type and create a canonical form.","_id":"datatype-expansion@0.0.10","scripts":{},"_shasum":"8ef81e3e617a95e3e59a00b52900fc5b36e0bb7d","_from":".","_npmVersion":"3.5.0","_nodeVersion":"5.1.0","_npmUser":{"name":"christianvogel","email":"christianvogel84@gmail.com"},"dist":{"shasum":"8ef81e3e617a95e3e59a00b52900fc5b36e0bb7d","tarball":"https://registry.npmjs.org/datatype-expansion/-/datatype-expansion-0.0.10.tgz"},"maintainers":[{"name":"christianvogel","email":"christianvogel84@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/datatype-expansion-0.0.10.tgz_1475748725973_0.8330409750342369"},"directories":{}},"0.0.11":{"name":"datatype-expansion","version":"0.0.11","main":"index","keywords":["raml","expansion","types"],"homepage":"https://github.com/raml-org/raml-parser-toolbelt/tree/master/tools/datatype-expansion","license":"Apache-2.0","bugs":{"url":"https://github.com/raml-org/raml-parser-toolbelt/issues"},"description":"> Often, tools need the full expansion of RAML data types where there are no references. This module gives you a utility tool to expand a given type and create a canonical form.","_id":"datatype-expansion@0.0.11","scripts":{},"_shasum":"e3c976c97a3626da316fbe9b5d9703948402595a","_from":".","_npmVersion":"3.5.0","_nodeVersion":"5.1.0","_npmUser":{"name":"christianvogel","email":"christianvogel84@gmail.com"},"dist":{"shasum":"e3c976c97a3626da316fbe9b5d9703948402595a","tarball":"https://registry.npmjs.org/datatype-expansion/-/datatype-expansion-0.0.11.tgz"},"maintainers":[{"name":"christianvogel","email":"christianvogel84@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/datatype-expansion-0.0.11.tgz_1475853211885_0.2488657704088837"},"directories":{}},"0.0.12":{"name":"datatype-expansion","version":"0.0.12","main":"index","keywords":["raml","expansion","types"],"homepage":"https://github.com/raml-org/raml-parser-toolbelt/tree/master/tools/datatype-expansion","license":"Apache-2.0","bugs":{"url":"https://github.com/raml-org/raml-parser-toolbelt/issues"},"description":"> Often, tools need the full expansion of RAML data types where there are no references. This module gives you a utility tool to expand a given type and create a canonical form.","_id":"datatype-expansion@0.0.12","scripts":{},"_shasum":"7a0dc77cc2c2d6d97e0119f8644472890ea1a117","_from":".","_npmVersion":"3.5.0","_nodeVersion":"5.1.0","_npmUser":{"name":"christianvogel","email":"christianvogel84@gmail.com"},"dist":{"shasum":"7a0dc77cc2c2d6d97e0119f8644472890ea1a117","tarball":"https://registry.npmjs.org/datatype-expansion/-/datatype-expansion-0.0.12.tgz"},"maintainers":[{"name":"christianvogel","email":"christianvogel84@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/datatype-expansion-0.0.12.tgz_1476099713277_0.47099773422814906"},"directories":{}},"0.0.14":{"name":"datatype-expansion","version":"0.0.14","main":"index","keywords":["raml","expansion","types"],"homepage":"https://github.com/raml-org/raml-parser-toolbelt/tree/master/tools/datatype-expansion","license":"Apache-2.0","bugs":{"url":"https://github.com/raml-org/raml-parser-toolbelt/issues"},"description":"> Often, tools need the full expansion of RAML data types where there are no references. This module gives you a utility tool to expand a given type and create a canonical form.","_id":"datatype-expansion@0.0.14","scripts":{},"_shasum":"67bf587daba6806cf44497411fd686866bfff19f","_from":".","_npmVersion":"3.5.0","_nodeVersion":"5.1.0","_npmUser":{"name":"christianvogel","email":"christianvogel84@gmail.com"},"dist":{"shasum":"67bf587daba6806cf44497411fd686866bfff19f","tarball":"https://registry.npmjs.org/datatype-expansion/-/datatype-expansion-0.0.14.tgz"},"maintainers":[{"name":"christianvogel","email":"christianvogel84@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/datatype-expansion-0.0.14.tgz_1478000027464_0.40319269546307623"},"directories":{}},"0.0.15":{"name":"datatype-expansion","version":"0.0.15","main":"index","keywords":["raml","expansion","types"],"homepage":"https://github.com/raml-org/raml-parser-toolbelt/tree/master/tools/datatype-expansion","license":"Apache-2.0","bugs":{"url":"https://github.com/raml-org/raml-parser-toolbelt/issues"},"description":"> Often, tools need the full expansion of RAML data types where there are no references. This module gives you a utility tool to expand a given type and create a canonical form.","_id":"datatype-expansion@0.0.15","scripts":{},"_shasum":"d804c47b15acf4e80ff1988d2dc4c2018cc97f0b","_from":".","_npmVersion":"3.5.0","_nodeVersion":"5.1.0","_npmUser":{"name":"christianvogel","email":"christianvogel84@gmail.com"},"dist":{"shasum":"d804c47b15acf4e80ff1988d2dc4c2018cc97f0b","tarball":"https://registry.npmjs.org/datatype-expansion/-/datatype-expansion-0.0.15.tgz"},"maintainers":[{"name":"christianvogel","email":"christianvogel84@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/datatype-expansion-0.0.15.tgz_1478089871620_0.2619346035644412"},"directories":{}},"0.1.0":{"name":"datatype-expansion","version":"0.1.0","main":"index","keywords":["raml","expansion","types"],"homepage":"https://github.com/raml-org/raml-parser-toolbelt/tree/master/tools/datatype-expansion","license":"Apache-2.0","bugs":{"url":"https://github.com/raml-org/raml-parser-toolbelt/issues"},"description":"> Often, tools need the full expansion of RAML data types where there are no references. This module gives you a utility tool to expand a given type and create a canonical form.","_id":"datatype-expansion@0.1.0","scripts":{},"_shasum":"6ce7634ec5a75789e9e0da01e46ec7a900d25c1e","_from":".","_npmVersion":"3.5.0","_nodeVersion":"5.1.0","_npmUser":{"name":"christianvogel","email":"christianvogel84@gmail.com"},"dist":{"shasum":"6ce7634ec5a75789e9e0da01e46ec7a900d25c1e","tarball":"https://registry.npmjs.org/datatype-expansion/-/datatype-expansion-0.1.0.tgz"},"maintainers":[{"name":"christianvogel","email":"christianvogel84@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/datatype-expansion-0.1.0.tgz_1479727252050_0.3908983482979238"},"directories":{}},"0.1.1":{"name":"datatype-expansion","version":"0.1.1","main":"index","keywords":["raml","expansion","types"],"homepage":"https://github.com/raml-org/raml-parser-toolbelt/tree/master/tools/datatype-expansion","license":"Apache-2.0","bugs":{"url":"https://github.com/raml-org/raml-parser-toolbelt/issues"},"description":"> Often, tools need the full expansion of RAML data types where there are no references. This module gives you a utility tool to expand a given type and create a canonical form.","_id":"datatype-expansion@0.1.1","scripts":{},"_shasum":"d510938fd41bae183616482552685373b998dec2","_from":".","_npmVersion":"3.5.0","_nodeVersion":"5.1.0","_npmUser":{"name":"christianvogel","email":"christianvogel84@gmail.com"},"dist":{"shasum":"d510938fd41bae183616482552685373b998dec2","tarball":"https://registry.npmjs.org/datatype-expansion/-/datatype-expansion-0.1.1.tgz"},"maintainers":[{"name":"christianvogel","email":"christianvogel84@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/datatype-expansion-0.1.1.tgz_1480942570293_0.9397764441091567"},"directories":{}}},"readme":"# RAML Data Type Expansion\n\n> Often, tools need the full expansion of RAML data types where there are no references. This module gives you a utility tool to expand a given type and create a canonical form.\n\n## Installation\n\n### NPM\n\n```\nnpm install datatype-expansion\n```\n\n### Developer Environment\n\nTo run this project and build the different packages for Java or Javascript, you need to install `leiningen`. You can use [homebrew](http://brew.sh/) for that.\n\n```\nbrew install leiningen\n```\n\n## RAML type expanded form\n\nThe RAML expanded form for a RAML type, resolves references and fills missing information to compute a fully expanded representation of the type.\nThe form and the algorithm to compute is [documented here](doc/algorithms.md).\n\n### Usage Clojure\n\nThe Clojure interface for the library offers a function to compute the expanded form using the `datatype-expansion.expanded-form/expanded-form` function.\nThe function accepts an in-memory representation of the RAML type (keywordize) and a map from type names to types with the same representation.\nIt returns the expanded form.\n\nThe following example shows a usage example:\n\n``` clojure\n;; A type context with some types definitions\n(def types-context {\"Songs.Song\" {:properties {:title \"string\"\n                                               :length \"number\"}}\n                    \"Songs.Album\" {:properties {:title \"string\"\n                                                :songs \"Songs.Song[]\"}}})\n\n(is (= (datatype-expansion.expanded-form/expanded-form (get types-context \"Songs.Album\") types-context)\n       {:type \"object\"\n        :properties\n        {\"title\" {:type \"string\" :required true}\n         \"songs\" {:type \"array\"\n                  :items {:type \"object\"\n                          :properties\n                          {\"title\"  {:type \"string\" :required true}\n                           \"length\" {:type \"number\" :required true}}\n                          :additionalProperties true\n                          :required true}\n                  :required true}}\n        :additionalProperties true\n        :required true}))\n```\n\n### Usage Node.js\n\nThe Node.js interface for the library offers the `expandedForm` function to compute the expanded form.\nIt accepts an in-memory JSON representation of the type, the types mapping and a callback function.\nIf the invocation succeeds, it will return the expanded form as an argument to the provided callback function.\n\n``` javascript\nvar tools = require(\"datatype-expansion\");\n\nvar typesContext = {\"Songs.Song\": {\"properties\": {\"title\": \"string\",\n                                                 \"length\": \"number\"}},\n                    \"Songs.Album\": {\"properties\": {\"title\": \"string\",\n                                                   \"songs\": \"Songs.Song[]\"}}};\ntools.expandedForm(typesContext[\"Songs.Album\"], typesContext, function(err, expanded) {\n  // expanded contains the computed expanded form\n  //{\n  //  \"properties\": {\n  //    \"title\": {\n  //      \"type\": \"string\",\n  //      \"required\": true\n  //    },\n  //    \"songs\": {\n  //      \"type\": \"array\",\n  //      \"items\": {\n  //        \"properties\": {\n  //          \"title\": {\n  //            \"type\": \"string\",\n  //            \"required\": true\n  //          },\n  //          \"length\": {\n  //            \"type\": \"number\",\n  //            \"required\": true\n  //          }\n  //        },\n  //        \"additionalProperties\": true,\n  //        \"type\": \"object\",\n  //        \"required\": true\n  //      },\n  //      \"required\": true\n  //    }\n  //  },\n  //  \"additionalProperties\": true,\n  //  \"type\": \"object\",\n  //  \"required\": true\n  //}\n  console.log(JSON.stringify(expanded,null,2));\n});\n```\n\n## RAML type canonical form\n\nThe canonical form computes inheritance and pushes unions to the top level of the type structure of an expanded RAML type. It is described in the [documentation section](doc/algorithms.md) of this repository.\n\n### Usage Clojure\n\nThe Clojure interface to compute the canonical form is implemented in the `datatype-expansion.canonical-form/canonical-form` function.\nThe function accepts and expanded RAML type and returns the canonical form for the same type.\n\n``` clojure\n;; A type context with some types definitions\n(def types-context {\"Songs.Song\" {:properties {:title \"string\"\n                                               :length \"number\"}}\n                    \"Songs.Album\" {:properties {:title \"string\"\n                                                :songs \"Songs.Song[]\"}}})\n\n(-> types-context\n    (get \"Songs.Song\")\n    (datatype-expansion.expanded-form/expanded-form types-context)\n    datatype-expansion.canonical-form/canonical-form)\n```\n\n### Usage Node.js\n\nThe Node.js version of the canonical form function is defined in the `canonicalForm` function of the library module.\nIt accepts a JSON in-memory representation of an expanded RAML type and a callback function. It returns the canonical form or an exception:\n\n``` javascript\nvar tools = require(\"datatype-expansion\");\n\nvar typesContext = {\"Songs.Song\": {\"properties\": {\"title\": \"string\",\n                                                 \"length\": \"number\"}},\n                    \"Songs.Album\": {\"properties\": {\"title\": \"string\",\n                                                   \"songs\": \"Songs.Song[]\"}}};\ntools.expandedForm(typesContext[\"Songs.Album\"], typesContext, function(err, expanded) {\n\n   tools.canonicalForm(expanded, function(err, canonical) {\n    // canonical contains the computed canonical form\n    console.log(canonical);\n   });\n\n});\n```\n\n### Usage browser\n\nRequire the browser build of the library, located in the `browser` directory.\n\n``` html\n<html>\n    <head>\n        <script type=\"text/javascript\" src=\"./browser/index.js\"></script>\n    </head>\n    <body>\n        <script type='text/javascript'>\n         var compose = function(g,f) {\n             return (function(x) { return g(f(x)); });\n         };\n\n         console.log(\"Starting...\");\n\n         var result = compose(\n             datatype_expansion.js.canonicalForm,\n             datatype_expansion.js.expandedForm\n         )(\"string\");\n\n         console.log(result); // you should get {\"type\": \"string\"}\n        </script>\n    </body>\n</html>\n\n```\n\n## Running tests\n\nTests for the library can be run for the clojure version using leiningen:\n\n``` shell\n$ lein test\n```\n\nThe JavaScript tests can be run with the following leiningen invocation:\n\n``` shell\n$ lein doo node test\n```\n\n\n## Building the NPM package\n\nThe ClojureScript code of the library can be packaged as a NPM library using the following leiningen comand:\n\n``` shell\n$ lein cljsbuild once default\n```\n\nThis command will compile the ClojureScript code into JavaScript code that can be published as a NPM package using the provided `packages.json` file.\n","maintainers":[{"name":"christianvogel","email":"christianvogel84@gmail.com"}],"time":{"modified":"2016-12-05T12:56:11.142Z","created":"2016-08-17T11:08:34.799Z","0.0.1":"2016-08-17T11:08:34.799Z","0.0.2":"2016-08-17T11:12:06.070Z","0.0.3":"2016-08-17T12:09:22.856Z","0.0.4":"2016-08-17T12:10:49.283Z","0.0.5":"2016-08-17T14:13:32.876Z","0.0.6":"2016-08-17T14:20:20.555Z","0.0.10":"2016-10-06T10:12:08.607Z","0.0.11":"2016-10-07T15:13:34.619Z","0.0.12":"2016-10-10T11:41:54.101Z","0.0.14":"2016-11-01T11:33:49.613Z","0.0.15":"2016-11-02T12:31:12.225Z","0.1.0":"2016-11-21T11:20:52.720Z","0.1.1":"2016-12-05T12:56:11.142Z"},"homepage":"https://github.com/raml-org/raml-parser-toolbelt/tree/master/tools/datatype-expansion","keywords":["raml","expansion","types"],"bugs":{"url":"https://github.com/raml-org/raml-parser-toolbelt/issues"},"license":"Apache-2.0","readmeFilename":"README.md","_attachments":{},"_etag":"\"584563eb-59eb\""}